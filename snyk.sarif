{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/InsufficientPostmessageValidation",
              "name": "InsufficientPostmessageValidation",
              "shortDescription": {
                "text": "Insufficient postMessage Validation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\npostMessage is a feature to perform cross-origin communication between JavaScript Window objects. This can be done by:\n\n* The sender using the `targetWindow.postMessage(message, targetOrigin)` to send a message to the `targetWindow` but only if the origin in that window matches `targetOrigin` (or if targetOrigin is set to the special value `*`);\n\n* The receiver listening for the message event in the window object.\n\nHowever, if no validation is done by the receiver, this could allow any window to send arbitrary data to the handler. This vulnerability could be leveraged by an attacker to disclose sensitive data to a malicious origin, or perform actions on a vicitim's behalf.\n\nExample:\n\n```\n\nwindow.addEventListener(\"message\", (event) => {\n    // DANGEROUS: No validation of origin\n    doStuff(event.data);\n});\n\n```\n\n## Best practices for prevention\n* Adopt a zero-trust model in which all input is considered potentially suspect.\n* Specify the targetOrigin instead of designating a wildcard `*`.\n\nExample:\n\n```\nwindow.addEventListener(\"message\", (event) => {\n    if (event.origin !== \"http://example.org\") // SAFE: origin checked\n        return;\n\n    console.log(event.data)\n});\n```\n\n## References\n\n* [Introduction to postMessage() Vulnerabilities](https://blog.yeswehack.com/yeswerhackers/introduction-postmessage-vulnerabilities/)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "InsufficientPostmessageValidation",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jupyter/colaboratory/commit/4480a3518e9a553398d1765cbd1f5f0973404425?diff=split#diff-17f87e85936591d68e176e6e2087a72c215038523f2d4fdb85daee0385996910L-1",
                    "lines": [
                      {
                        "line": "var serverAddress = 'http://127.0.0.1:8000';\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "var serverPath = '/static/index.html';\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "window.addEventListener('message', function(message) {\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "    console.log(message);\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (message.sender !== webview || message.origin !== serverAddress) {\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return;\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/opencollective/opencollective-frontend/commit/b2f6106b893161985dcaf7bc61a5794fac8f0fd5?diff=split#diff-06affdef710c5fc02a5e71e01d2c93ea4dda5496380c742c8bd55eb58523f27aL-1",
                    "lines": [
                      {
                        "line": "window.addEventListener('message', (e) => {\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (e.origin !== \"https://opencollective.com\") return;\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sghall/bundle-inspector-webpack-plugin/commit/1897c82280ad6b4957c646ca775ea9780cef8de6?diff=split#diff-495bc0c184ce2971c7055c2837f64789a05b97aa3a259d7d8e4acf91976e9066L-1",
                    "lines": [
                      {
                        "line": "  ws = new WebSocket(`ws://localhost`);\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "} catch (err) {\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  console.warn(\"Chunky Monkey could not connect :(\");\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const ws = new WebSocket(`ws://${window.location.host}`);\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "window.addEventListener(\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  \"load\",\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  () => {\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (ws) {\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      ws.addEventListener(\"message\", event => {\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        console.log(JSON.parse(event.data));\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ws.addEventListener(\"message\", ({ data }) => {\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "    window.location = `${window.location.pathname}?file=${data}`;\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "  });\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 13,
                "cwe": [
                  "CWE-20"
                ]
              }
            },
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PT",
                  "Security",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/NodeBB/NodeBB/commit/cacc732015c64bba55a6ab45510086febccfb1b2?diff=split#diff-300f765b568b38163933bfcd40c75fe91709a35e9a7522bca2f8c5fe4b19195aL-1",
                    "lines": [
                      {
                        "line": "\t\t\t\t\tuploadUserPicture(req.user.uid, req.files.userPhoto.name, req.files.userPhoto.path, res);\n",
                        "lineNumber": 101,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);\n",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\treturn;\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t}\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tvar absolutePath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), path.basename(oldpicture));\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tfs.unlink(absolutePath, function(err) {\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tif(err) {\t\t\t\t\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t\tconsole.error('[%d] %s', Date.now(), + err);\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t}\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t});\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t});\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfunction uploadUserPicture(uid, extension, tempPath, res) {\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tif(!extension) {\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tres.send({\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\terror: 'Error uploading file! Error : Invalid extension!'\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t});\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\treturn;\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t}\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tvar filename = uid + '-profileimg' + extension;\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tvar uploadPath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), filename);\n",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t// @todo move to proper logging code - this should only be temporary\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tconsole.log('Info: Attempting upload to: '+ uploadPath);\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tvar is = fs.createReadStream(tempPath);\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tvar os = fs.createWriteStream(uploadPath);\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vilmosioo/magma/commit/b13ae22e9cc3646444f949279c92dfa54fa2e882?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "\tres.render(req.params.path || 'home');\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tconsole.log(req.params.path);\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tvar template = routes['/' + req.params.path] || routes['/'];\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\ttemplate = template.templateUrl;\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tres.render(path.basename(template, path.extname(template)), {\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconstants: {\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tROUTES: JSON.stringify(routes)\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t}\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t});\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/cube-js/cube.js/commit/256be019d9393daff7d8776be2c39bceafc49ce2?diff=split#diff-e3f9f2305d99d77628204eb1da6a6fd4695a3b3235274d4e7d8a65a150f0941fL-1",
                    "lines": [
                      {
                        "line": "await Promise.all(files.map(file => fs.writeFile(path.join(file.fileName), file.content)));\n",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "await Promise.all(\n",
                        "lineNumber": 144,
                        "lineChange": "added"
                      },
                      {
                        "line": "  files.map(file => path.join(...[dashboardAppPath].concat(file.fileName.split('/'))))\n",
                        "lineNumber": 145,
                        "lineChange": "added"
                      },
                      {
                        "line": ");\n",
                        "lineNumber": 146,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 42,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/emgram769/livechan-js/commit/99ecea722f7fc204ce3293ff2b0e315d0e61ccad?diff=split#diff-fdbfe737b6f8eaccddd46f57a79b5532942e1667c38ca880c32d89723af39857L-1",
                    "lines": [
                      {
                        "line": "var hash_pass = crypto.createHash('sha1').update(password).digest('base64');\n",
                        "lineNumber": 88,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var hash_pass = crypto.createHash('sha512').update(config.admin_pw_salt, 'base64').update(password, 'utf8').digest('base64');\n",
                        "lineNumber": 88,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Synzvato/decentraleyes/commit/8855358381cff8156fe7a801d9201371034373a2?diff=split#diff-8e3adc8af301344e44c7efc3f4a24d375d02d285c617793db6d2eabe367b9d92L-1",
                    "lines": [
                      {
                        "line": "hash = crypto.createHash('md5');\n",
                        "lineNumber": 139,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hash = crypto.createHash('sha512');\n",
                        "lineNumber": 139,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/openmrs/openmrs-contrib-id/commit/877c9a874b349a330b806414bfad82d03de39eb1?diff=split#diff-629444d01512e7f8fd688f67bf412d620053325ed416c34f940ffd52bb4420e2L-1",
                    "lines": [
                      {
                        "line": "hash = crypto.createHash('md5');\n",
                        "lineNumber": 109,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hash = crypto.createHash('sha512');\n",
                        "lineNumber": 109,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "javascript/reDOS/test",
              "name": "reDOS/test",
              "shortDescription": {
                "text": "Regular Expression Denial of Service (ReDoS)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "reDOS",
                  "Security",
                  "InTest",
                  "SourceNonServer",
                  "SourceResourceAccess",
                  "SourceStackTrace",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ivanoff/Amazon-S3-gate-API/commit/ce05418c1c47a6a26ca10c56c3f48f1fbbe61a0d?diff=split#diff-aa3508d55ee1dbde335732d75d71240b4e7c7a3a4fffa1afa6f7897a483a3521L-1",
                    "lines": [
                      {
                        "line": "search : function( req, res ){\n",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "search : function( req, query, res ){\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "    req.db.collection(this.modelName)\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .find( { userId : req.currentUser._id, name : new RegExp( req.params.name, 'i' ) } ).toArray( res );\n",
                        "lineNumber": 55,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        .find( query ).toArray( res );\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SayakMukhopadhyay/elitebgs/commit/e5879c0be815589c372a1a8871dbb44e0eb1659c?diff=split#diff-05ec808013e5fe3aa6194e705e156a1719d8e163568ec76540f221ad708e2c44L-1",
                    "lines": [
                      {
                        "line": "$regex: new RegExp(`^${req.query.beginsWith.toLowerCase()}`)\n",
                        "lineNumber": 114,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$regex: new RegExp(`^${_.escapeRegExp(req.query.beginsWith.toLowerCase())}`)\n",
                        "lineNumber": 115,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SayakMukhopadhyay/elitebgs/commit/e5879c0be815589c372a1a8871dbb44e0eb1659c?diff=split#diff-4d8a93d3cc127b845f405f2bb1f89f720c9e4cc8ba64341510e1caab51c95a85L-1",
                    "lines": [
                      {
                        "line": "$regex: new RegExp(`^${req.query.beginsWith.toLowerCase()}`)\n",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$regex: new RegExp(`^${_.escapeRegExp(req.query.beginsWith.toLowerCase())}`)\n",
                        "lineNumber": 94,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 61,
                "cwe": [
                  "CWE-400"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/InsufficientPostmessageValidation",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The origin of the received message is not checked. This means any site (even malicious) can send message to this window. If you don't expect this, consider checking the origin of sender.",
            "markdown": "The origin of the received message is not checked. This means any site (even malicious) can send message to this window. If you don't expect this, consider checking the origin of sender.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/vite/dist/client/client.mjs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 250,
                  "endLine": 250,
                  "startColumn": 47,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e6050048d26bf9a0bea42a56fca2c1571c9594d613fd4e1bc43261a22cccea58",
            "1": "3df95e84.4773f344.607187b5.c559ebce.8d22f254.10d85176.83265159.870b3dbe.cee1e251.4773f344.607187b5.c559ebce.69920cab.8020cfdf.83265159.1db0a836"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/vite/dist/client/client.mjs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 47,
                            "endColumn": 55
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 357,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.readdir, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list arbitrary directories.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list arbitrary directories.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[fs.readdir](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 523,
                  "endLine": 523,
                  "startColumn": 2,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8d63f183416701da8cc657a612eba9a6d46e74cf49eefeb1022d6bebea95b604",
            "1": "4296282c.4773f344.3de1fb86.f22d421d.ef9f7d82.f22c846e.83265159.0ff335d7.dec24e63.4773f344.cbd9d8b4.dc733355.acf24367.1d3def36.83265159.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 529,
                            "endLine": 529,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 551,
                            "endLine": 551,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 2,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.readdir, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list arbitrary directories.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list arbitrary directories.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[fs.readdir](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "startColumn": 2,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aaf6ffc449248707800660e84f0f661f510594af2769a544ee1f12be80d28e91",
            "1": "4296282c.4773f344.607187b5.f22d421d.ef9f7d82.f22c846e.83265159.0ff335d7.2d06e3d6.b6e32c83.ca51c405.dc733355.acf24367.1d3def36.3e0616cf.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 14,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 2,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.readdir, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list arbitrary directories.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list arbitrary directories.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[fs.readdir](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 571,
                  "endLine": 571,
                  "startColumn": 2,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "90a1541886d1489b748f4a9b18d7275b55396c1ccbe71eae9f5aa0b55d1a65e3",
            "1": "4296282c.4773f344.3de1fb86.f22d421d.ef9f7d82.f22c846e.83265159.0ff335d7.dec24e63.b6e32c83.cbd9d8b4.dc733355.acf24367.1d3def36.83265159.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 571,
                            "endLine": 571,
                            "startColumn": 35,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 571,
                            "endLine": 571,
                            "startColumn": 35,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 577,
                            "endLine": 577,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 578,
                            "endLine": 578,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 578,
                            "endLine": 578,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 582,
                            "endLine": 582,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 568,
                            "endLine": 568,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 571,
                            "endLine": 571,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 578,
                            "endLine": 578,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 599,
                            "endLine": 599,
                            "startColumn": 8,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 571,
                            "endLine": 571,
                            "startColumn": 2,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.readdir, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list arbitrary directories.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list arbitrary directories.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[fs.readdir](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 519,
                  "endLine": 519,
                  "startColumn": 2,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "07a719003aee8270d169f1eb81abc8dfc0da018138fdd5076fd18db1c63651af",
            "1": "4296282c.4773f344.3de1fb86.f22d421d.ef9f7d82.f22c846e.83265159.0ff335d7.dec24e63.b6e32c83.cbd9d8b4.dc733355.acf24367.1d3def36.83265159.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 528,
                            "endLine": 528,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 516,
                            "endLine": 516,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 547,
                            "endLine": 547,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 2,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.stat, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to change current directory.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to change current directory.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[fs.stat](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 532,
                  "endLine": 532,
                  "startColumn": 4,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3bd0a72dcafde7d1d2a406d77b08c9247f00f61a630fa070c4474822d9d9cc12",
            "1": "42912fa2.4773f344.ca51c405.f44b19e0.c2cde80a.2da1a176.83265159.0ff335d7.2d06e3d6.4773f344.ca51c405.dc733355.acf24367.1d3def36.3e0616cf.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 529,
                            "endLine": 529,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.cjs.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 4,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.stat, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to change current directory.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to change current directory.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[fs.stat](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 4,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "354165d3d9b2624c7853edb71109cdafb8e7b11d4e45536281b81bda7078fd21",
            "1": "42912fa2.4773f344.ca51c405.f44b19e0.c2cde80a.2da1a176.83265159.0ff335d7.2d06e3d6.b6e32c83.ca51c405.dc733355.acf24367.1d3def36.3e0616cf.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 14,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/src/extraMethods/lsr.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.stat, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to change current directory.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to change current directory.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[fs.stat](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 580,
                  "endLine": 580,
                  "startColumn": 4,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6ceebe3e91a76078acec1ac25230ad65345408ad1ee50df64db68a9b69313926",
            "1": "42912fa2.4773f344.ca51c405.f44b19e0.c2cde80a.2da1a176.83265159.0ff335d7.2d06e3d6.b6e32c83.ca51c405.dc733355.acf24367.1d3def36.3e0616cf.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 571,
                            "endLine": 571,
                            "startColumn": 35,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 571,
                            "endLine": 571,
                            "startColumn": 35,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 577,
                            "endLine": 577,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 578,
                            "endLine": 578,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 578,
                            "endLine": 578,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 582,
                            "endLine": 582,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 568,
                            "endLine": 568,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 571,
                            "endLine": 571,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 578,
                            "endLine": 578,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es6.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 4,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.stat, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to change current directory.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to change current directory.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[fs.stat](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 528,
                  "endLine": 528,
                  "startColumn": 4,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "da5a1b3beb38ef8cb82b70910d4d4b27b5f6c60bcdb97b0467d8c9dad530b3d5",
            "1": "42912fa2.4773f344.ca51c405.f44b19e0.c2cde80a.2da1a176.83265159.0ff335d7.2d06e3d6.b6e32c83.ca51c405.dc733355.acf24367.1d3def36.3e0616cf.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 528,
                            "endLine": 528,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 516,
                            "endLine": 516,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 519,
                            "endLine": 519,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/sander/dist/sander.es.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 528,
                            "endLine": 528,
                            "startColumn": 4,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "md5 hash (used in createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[md5](0)",
              "[createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/dist/index.cjs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 305,
                  "endLine": 305,
                  "startColumn": 22,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "853c5cb740251bd933fdc17ee2ab7e031e87d5dc2d4c3e1aa7352771ec5d58bb",
            "1": "a99854a8.4773f344.191eaf2b.d7919eeb.24780d11.f7edcf51.ea4b1c47.71520ffe.a99854a8.4773f344.191eaf2b.d7919eeb.ef9f7d82.8020cfdf.ea4b1c47.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/dist/index.cjs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/dist/index.cjs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 382,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "md5 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[md5](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/dist/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 275,
                  "endLine": 275,
                  "startColumn": 15,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b07427db953c1c855783b3dbb66a12a70b5418236c672d65f7b995e94a4b04cc",
            "1": "37bc1bfe.d2255a1c.191eaf2b.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.71520ffe.37bc1bfe.4773f344.191eaf2b.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/dist/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/dist/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 275,
                            "endLine": 275,
                            "startColumn": 15,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 382,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "md5 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[md5](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/src/utils/hash.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "startColumn": 14,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "09c3f500667dc73db4675b7c25344863f40fcfa00dcf5a2e1ad5cfc170185208",
            "1": "37bc1bfe.d2255a1c.191eaf2b.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.71520ffe.37bc1bfe.4773f344.191eaf2b.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/src/utils/hash.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 32,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/@sveltejs/vite-plugin-svelte/src/utils/hash.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 14,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 382,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "sha1 hash (used in createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[sha1](0)",
              "[createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/vite/dist/node-cjs/publicUtils.cjs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3683,
                  "endLine": 3683,
                  "startColumn": 6,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "794ab9f7aa83046ec84d9f88749b1dd2298ecedf25ba625cadcf541a8dfe488c",
            "1": "ee014372.4773f344.191eaf2b.d9da6552.ef9f7d82.82ca542b.7a8c7288.71520ffe.ee014372.4773f344.191eaf2b.d9da6552.ef9f7d82.82ca542b.7a8c7288.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/vite/dist/node-cjs/publicUtils.cjs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3683,
                            "endLine": 3683,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/vite/dist/node-cjs/publicUtils.cjs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3683,
                            "endLine": 3683,
                            "startColumn": 6,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 382,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "md4 hash (used in createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[md4](0)",
              "[createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/vite/dist/node/chunks/dep-fd803d77.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2006,
                  "endLine": 2006,
                  "startColumn": 49,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cccabd5c2800f20a14ea25b69a43f21fa8241fbc816fd663b2a4a68b0853bb5c",
            "1": "1e790f7a.4773f344.191eaf2b.c559ebce.8d22f254.831714ef.0319d7da.71520ffe.1e790f7a.4773f344.191eaf2b.c559ebce.8d22f254.831714ef.0319d7da.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/vite/dist/node/chunks/dep-fd803d77.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2006,
                            "endLine": 2006,
                            "startColumn": 60,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/vite/dist/node/chunks/dep-fd803d77.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2006,
                            "endLine": 2006,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 382,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/reDOS/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Unsanitized user input from an exception flows into match, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2)",
              "[match](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 203,
                  "endLine": 203,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "42def8e670b268c23fcd0d54f5387cecfd1eef2eceec636cfc21656ae49ebce3",
            "1": "b04368d9.4773f344.607187b5.2a8c8b00.ef9f7d82.37110c89.cd61fc56.d5de5421.51bd987d.4773f344.c9330245.1a7f4325.ad1a75cc.8431f2ca.3e0616cf.31b89ff8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 413,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/reDOS/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Unsanitized user input from an exception flows into match, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2)",
              "[match](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 216,
                  "endLine": 216,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ffe75c445beca4b32cb6b7e303847364891d818a26edf3b77c9b6c883421022f",
            "1": "b04368d9.4773f344.607187b5.2a8c8b00.ef9f7d82.37110c89.cd61fc56.d5de5421.51bd987d.4773f344.c9330245.1a7f4325.ef9f7d82.8431f2ca.699cb68b.31b89ff8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "proxy-desktop/frontend/node_modules/fastq/test/promise.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 413,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 478,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "TypeScript",
            "files": 529,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "HTML",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
